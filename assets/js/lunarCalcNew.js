// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ª—É–Ω–Ω—ã—Ö –¥–Ω–µ–π –ø–æ —Å–∏—Å—Ç–µ–º–µ —Å—É—Ç—Ç
function getLunarDays() {
  const now = new Date();
  const currentHour = now.getHours();
  
  // –ë–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–º–æ–∂–Ω–æ —É—Ç–æ—á–Ω–∏—Ç—å)
  const timeZoneOffset = 6; // –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–¥–ª—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ +6)
  const newMoonDate = new Date('2023-01-21T20:53Z'); // –î–∞—Ç–∞ –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –Ω–æ–≤–æ–ª—É–Ω–∏—è
  
  // –õ—É–Ω–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
  const LUNAR_CYCLE = 29.530588; // –°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ –ª—É–Ω–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞
  const HALF_CYCLE = 14.765294; // –ü–æ–ª–æ–≤–∏–Ω–∞ —Ü–∏–∫–ª–∞ (~15 –¥–Ω–µ–π)
  
  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –ª—É–Ω–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç
  const daysSinceNewMoon = (now - newMoonDate) / (1000 * 60 * 60 * 24);
  let lunarAge = daysSinceNewMoon % LUNAR_CYCLE;
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –ø–æ–ª—É–º–µ—Å—è—Ü (—Ä–∞—Å—Ç—É—â–∏–π –∏–ª–∏ —É–±—ã–≤–∞—é—â–∏–π)
  const isWaxing = lunarAge < HALF_CYCLE;
  
  // –¢–µ–∫—É—â–∏–π –ª—É–Ω–Ω—ã–π –¥–µ–Ω—å (1-15)
  let currentLunarDay = Math.floor(isWaxing ? lunarAge : lunarAge - HALF_CYCLE) + 1;
  
  // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –Ω–∞ –Ω–∞—á–∞–ª–æ —Å—É—Ç–æ–∫ —Å 18:00
  if (currentHour >= 18) {
    currentLunarDay = (currentLunarDay % 15) + 1;
  }
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –ª—É–Ω–Ω—ã–π –¥–µ–Ω—å
  document.getElementById("lunarDay").textContent = currentLunarDay;
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–∞—Ç —Å —É—á–µ—Ç–æ–º 18:00 –∫–∞–∫ –Ω–∞—á–∞–ª–∞ —Å—É—Ç–æ–∫
  function getLunarDayDate(targetDay) {
    // –†–∞–∑–Ω–∏—Ü–∞ –¥–Ω–µ–π –¥–æ —Ü–µ–ª–µ–≤–æ–≥–æ –¥–Ω—è
    let daysDiff = (targetDay - currentLunarDay) % 15;
    if (daysDiff < 0) daysDiff += 15;
    
    // –°–æ–∑–¥–∞–µ–º —Ü–µ–ª–µ–≤—É—é –¥–∞—Ç—É
    const targetDate = new Date(now);
    targetDate.setDate(now.getDate() + daysDiff);
    targetDate.setHours(18, 0, 0, 0); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞ 18:00
    
    return targetDate;
  }
  
  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –±–ª–∏–∂–∞–π—à–∏–µ –≤–∞–∂–Ω—ã–µ –¥–Ω–∏
  function formatPeriod(startDate, endDate) {
    const options = { day: 'numeric', month: 'long' };
    return `${startDate.toLocaleDateString()} (–Ω–æ—á—å) - ${endDate.toLocaleDateString()} (–¥–µ–Ω—å)`;
  }
  
  // 8-–π –ª—É–Ω–Ω—ã–π –¥–µ–Ω—å (–Ω–æ—á—å+–¥–µ–Ω—å)
  const eighthDayStart = getLunarDayDate(8);
  const eighthDayEnd = new Date(eighthDayStart);
  eighthDayEnd.setDate(eighthDayStart.getDate() + 1);
  document.getElementById("lunar8").textContent = formatPeriod(eighthDayStart, eighthDayEnd);
  
  // 14-–π –ª—É–Ω–Ω—ã–π –¥–µ–Ω—å (–Ω–æ—á—å –ø–µ—Ä–µ–¥ –ø–æ–ª–Ω–æ–ª—É–Ω–∏–µ–º/–Ω–æ–≤–æ–ª—É–Ω–∏–µ–º)
  const fourteenthDay = getLunarDayDate(14);
  const fourteenthDayEnd = new Date(fourteenthDay);
  fourteenthDayEnd.setDate(fourteenthDay.getDate() + 1);
  document.getElementById("lunar14").textContent = formatPeriod(fourteenthDay, fourteenthDayEnd);
  
  // 15-–π –ª—É–Ω–Ω—ã–π –¥–µ–Ω—å (–¥–µ–Ω—å –ø–æ–ª–Ω–æ–ª—É–Ω–∏—è/–Ω–æ–≤–æ–ª—É–Ω–∏—è)
  const fifteenthDay = getLunarDayDate(15);
  const fifteenthDayEnd = new Date(fifteenthDay);
  fifteenthDayEnd.setDate(fifteenthDay.getDate() + 1);
  document.getElementById("lunar15").textContent = formatPeriod(fifteenthDay, fifteenthDayEnd);
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∞–∑—É –ª—É–Ω—ã
  const moonPhases = document.documentElement.lang === "ru" ?
    ["üåë –ù–æ–≤–æ–ª—É–Ω–∏–µ", "üåì –†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞", "üåï –ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ", "üåó –£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞"] :
    ["üåë New Moon", "üåì Waxing", "üåï Full Moon", "üåó Waning"];
  
  let phaseIndex;
  if (lunarAge < 7.4) phaseIndex = 1;
  else if (lunarAge < 14.8) phaseIndex = 2;
  else if (lunarAge < 22.1) phaseIndex = 3;
  else phaseIndex = 0;
  
  document.getElementById("moonPhase").textContent = moonPhases[phaseIndex];
}

// –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
window.onload = getLunarDays;
setInterval(getLunarDays, 3600000); // –û–±–Ω–æ–≤–ª—è—Ç—å –∫–∞–∂–¥—ã–π —á–∞—Å